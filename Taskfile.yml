# https://taskfile.dev

version: "3"

vars:
  BUILD_DIR: ./Builds
  SOURCE_DIR: ./Source
  PDX_PATH:
    sh: echo "{{.BUILD_DIR}}/$(basename $(pwd)).pdx"

env:
  PLAYDATE_SDK_PATH: "{{.HOME}}/Applications/PlaydateSDK"

tasks:
  clean:
    desc: Clean the build output
    deps: [build-folder]
    cmds:
      - rm -rfv "${{.BUILD_DIR}}/*"
    silent: true

  build:
    desc: Build the project
    deps: [clean]
    cmds:
      - ${PLAYDATE_SDK_PATH}/bin/pdc -sdkpath "${PLAYDATE_SDK_PATH}" "{{.SOURCE_DIR}}" "{{.PDX_PATH}}"
    silent: true

  run:
    desc: Run the project
    deps: [kill-sim]
    cmds:
      - ${PLAYDATE_SDK_PATH}/bin/PlaydateSimulator "{{.PDX_PATH}}"
    silent: true

  build:run:
    desc: Build and run the project
    deps: [build, run]
    silent: true

  init:
    desc: Init the repository
    deps: [build-folder]
    cmds:
      - git submodule update --init --remote
    silent: true

  install:
    desc: Download & install the Playdate SDK
    cmds:
      - |
        if [ ! -d "$PLAYDATE_SDK_PATH" ]; then
          mkdir -p "$(dirname $PLAYDATE_SDK_PATH)"
          curl -L https://download.panic.com/playdate_sdk/Linux/PlaydateSDK-latest.tar.gz | tar -xz -C /tmp
          mv /tmp/PlaydateSDK-* "$PLAYDATE_SDK_PATH"
        else
          echo "Playdate SDK already installed..."
        fi
    silent: true

  kill-sim:
    desc: Kill the simulator if one is running
    cmds:
      - |
        SIM_PID=$(pidof PlaydateSimulator || true)
        if [[ -n ${SIM_PID} ]]; then
          echo "Killing existing Simulator..."
          kill -9 ${SIM_PID}
        fi
    silent: true
    internal: true

  build-folder:
    cmds:
      - mkdir -p "{{.BUILD_DIR}}"
    generates:
      - "{{.BUILD_DIR}}"
    silent: true
    internal: true

  default:
    cmds:
      - task --list
    silent: true
